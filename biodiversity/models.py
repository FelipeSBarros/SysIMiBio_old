from django.conf import settings
from django.db import models
from django.utils import timezone

class gbif(models.Model):
    author = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
    gbifID = models.BigIntegerField(blank = True)
    abstract = models.CharField(max_length=254, blank = True)
    accessRights = models.CharField(max_length=254, blank = True)
    accrualMethod = models.CharField(max_length=254, blank = True)
    accrualPeriodicity = models.CharField(max_length=254, blank = True)
    accrualPolicy = models.CharField(max_length=254, blank = True)
    alternative = models.CharField(max_length=254, blank = True)
    audience = models.CharField(max_length=254, blank = True)
    available = models.CharField(max_length=254, blank = True)
    bibliographicCitation = models.CharField(max_length=254, blank = True)
    conformsTo = models.CharField(max_length=254, blank = True)
    contributor = models.CharField(max_length=254, blank = True)
    coverage = models.CharField(max_length=254, blank = True)
    created = models.CharField(max_length=254, blank = True)
    creator = models.CharField(max_length=254, blank = True)
    date = models.CharField(max_length=254, blank = True)
    dateAccepted = models.CharField(max_length=254, blank = True)
    dateCopyrighted = models.CharField(max_length=254, blank = True)
    dateSubmitted = models.CharField(max_length=254, blank = True)
    description = models.CharField(max_length=254, blank = True)
    educationLevel = models.CharField(max_length=254, blank = True)
    extent = models.CharField(max_length=254, blank = True)
    format = models.CharField(max_length=254, blank = True)
    hasFormat = models.CharField(max_length=254, blank = True)
    hasPart = models.CharField(max_length=254, blank = True)
    hasVersion = models.CharField(max_length=254, blank = True)
    identifier = models.CharField(max_length=254, blank = True)
    instructionalMethod = models.CharField(max_length=254, blank = True)
    isFormatOf = models.CharField(max_length=254, blank = True)
    isPartOf = models.CharField(max_length=254, blank = True)
    isReferencedBy = models.CharField(max_length=254, blank = True)
    isReplacedBy = models.CharField(max_length=254, blank = True)
    isRequiredBy = models.CharField(max_length=254, blank = True)
    isVersionOf = models.CharField(max_length=254, blank = True)
    issued = models.CharField(max_length=254, blank = True)
    language = models.CharField(max_length=254, blank = True)
    license = models.CharField(max_length=254, blank = True)
    mediator = models.CharField(max_length=254, blank = True)
    medium = models.CharField(max_length=254, blank = True)
    modified = models.CharField(max_length=254, blank = True)
    provenance = models.CharField(max_length=254, blank = True)
    publisher = models.CharField(max_length=254, blank = True)
    references = models.CharField(max_length=254, blank = True)
    relation = models.CharField(max_length=254, blank = True)
    replaces = models.CharField(max_length=254, blank = True)
    requires = models.CharField(max_length=254, blank = True)
    rights = models.CharField(max_length=254, blank = True)
    rightsHolder = models.CharField(max_length=254, blank = True)
    source = models.CharField(max_length=254, blank = True)
    spatial = models.CharField(max_length=254, blank = True)
    subject = models.CharField(max_length=254, blank = True)
    tableOfContents = models.CharField(max_length=254, blank = True)
    temporal = models.CharField(max_length=254, blank = True)
    title = models.CharField(max_length=254, blank = True)
    type = models.CharField(max_length=254, blank = True)
    valid = models.CharField(max_length=254, blank = True)
    institutionID = models.CharField(max_length=254, blank = True)
    collectionID = models.CharField(max_length=254, blank = True)
    datasetID = models.CharField(max_length=254, blank = True)
    institutionCode = models.CharField(max_length=254, blank = True)
    collectionCode = models.CharField(max_length=254, blank = True)
    datasetName = models.CharField(max_length=254, blank = True)
    ownerInstitutionCode = models.CharField(max_length=254, blank = True)
    basisOfRecord = models.CharField(max_length=254, blank = True)
    informationWithheld = models.CharField(max_length=254, blank = True)
    dataGeneralizations = models.CharField(max_length=254, blank = True)
    dynamicProperties = models.CharField(max_length=254, blank = True)
    occurrenceID = models.CharField(max_length=254, blank = True)
    catalogNumber = models.CharField(max_length=254, blank = True)
    recordNumber = models.CharField(max_length=254, blank = True)
    recordedBy = models.CharField(max_length=254, blank = True)
    individualCount = models.CharField(max_length=254, blank = True)
    organismQuantity = models.CharField(max_length=254, blank = True)
    organismQuantityType = models.CharField(max_length=254, blank = True)
    sex = models.CharField(max_length=254, blank = True)
    lifeStage = models.CharField(max_length=254, blank = True)
    reproductiveCondition = models.CharField(max_length=254, blank = True)
    behavior = models.CharField(max_length=254, blank = True)
    establishmentMeans = models.CharField(max_length=254, blank = True)
    occurrenceStatus = models.CharField(max_length=254, blank = True)
    preparations = models.CharField(max_length=254, blank = True)
    disposition = models.CharField(max_length=254, blank = True)
    associatedReferences = models.CharField(max_length=254, blank = True)
    associatedSequences = models.CharField(max_length=254, blank = True)
    associatedTaxa = models.CharField(max_length=254, blank = True)
    otherCatalogNumbers = models.CharField(max_length=254, blank = True)
    occurrenceRemarks = models.CharField(max_length=254, blank = True)
    organismID = models.CharField(max_length=254, blank = True)
    organismName = models.CharField(max_length=254, blank = True)
    organismScope = models.CharField(max_length=254, blank = True)
    associatedOccurrences = models.CharField(max_length=254, blank = True)
    associatedOrganisms = models.CharField(max_length=254, blank = True)
    previousIdentifications = models.CharField(max_length=254, blank = True)
    organismRemarks = models.CharField(max_length=254, blank = True)
    materialSampleID = models.CharField(max_length=254, blank = True)
    eventID = models.CharField(max_length=254, blank = True)
    parentEventID = models.CharField(max_length=254, blank = True)
    fieldNumber = models.CharField(max_length=254, blank = True)
    eventDate = models.CharField(max_length=254, blank = True)
    eventTime = models.CharField(max_length=254, blank = True)
    startDayOfYear = models.BigIntegerField(blank = True)
    endDayOfYear = models.BigIntegerField(blank = True)
    year = models.BigIntegerField(blank = True)
    month = models.BigIntegerField(blank = True)
    day = models.BigIntegerField(blank = True)
    verbatimEventDate = models.CharField(max_length=254, blank = True)
    habitat = models.CharField(max_length=254, blank = True)
    samplingProtocol = models.CharField(max_length=254, blank = True)
    samplingEffort = models.CharField(max_length=254, blank = True)
    sampleSizeValue = models.CharField(max_length=254, blank = True)
    sampleSizeUnit = models.CharField(max_length=254, blank = True)
    fieldNotes = models.CharField(max_length=254, blank = True)
    eventRemarks = models.CharField(max_length=254, blank = True)
    locationID = models.CharField(max_length=254, blank = True)
    higherGeographyID = models.CharField(max_length=254, blank = True)
    higherGeography = models.CharField(max_length=254, blank = True)
    continent = models.CharField(max_length=254, blank = True)
    waterBody = models.CharField(max_length=254, blank = True)
    islandGroup = models.CharField(max_length=254, blank = True)
    island = models.CharField(max_length=254, blank = True)
    countryCode = models.CharField(max_length=254, blank = True)
    stateProvince = models.CharField(max_length=254, blank = True)
    county = models.CharField(max_length=254, blank = True)
    municipality = models.CharField(max_length=254, blank = True)
    locality = models.CharField(max_length=254, blank = True)
    verbatimLocality = models.CharField(max_length=254, blank = True)
    verbatimElevation = models.CharField(max_length=254, blank = True)
    verbatimDepth = models.CharField(max_length=254, blank = True)
    minimumDistanceAboveSurfaceInMeters = models.CharField(max_length=254, blank = True)
    maximumDistanceAboveSurfaceInMeters = models.CharField(max_length=254, blank = True)
    locationAccordingTo = models.CharField(max_length=254, blank = True)
    locationRemarks = models.CharField(max_length=254, blank = True)
    decimalLatitude = models.FloatField(blank = True)
    decimalLongitude = models.FloatField(blank = True)
    coordinateUncertaintyInMeters = models.FloatField(blank = True)
    coordinatePrecision = models.CharField(max_length=254, blank = True)
    pointRadiusSpatialFit = models.CharField(max_length=254, blank = True)
    verbatimCoordinateSystem = models.CharField(max_length=254, blank = True)
    verbatimSRS = models.CharField(max_length=254, blank = True)
    footprintWKT = models.CharField(max_length=254, blank = True)
    footprintSRS = models.CharField(max_length=254, blank = True)
    footprintSpatialFit = models.CharField(max_length=254, blank = True)
    georeferencedBy = models.CharField(max_length=254, blank = True)
    georeferencedDate = models.BigIntegerField(blank = True)
    georeferenceProtocol = models.CharField(max_length=254, blank = True)
    georeferenceSources = models.CharField(max_length=254, blank = True)
    georeferenceVerificationStatus = models.CharField(max_length=254, blank = True)
    georeferenceRemarks = models.CharField(max_length=254, blank = True)
    geologicalContextID = models.CharField(max_length=254, blank = True)
    earliestEonOrLowestEonothem = models.CharField(max_length=254, blank = True)
    latestEonOrHighestEonothem = models.CharField(max_length=254, blank = True)
    earliestEraOrLowestErathem = models.CharField(max_length=254, blank = True)
    latestEraOrHighestErathem = models.CharField(max_length=254, blank = True)
    earliestPeriodOrLowestSystem = models.CharField(max_length=254, blank = True)
    latestPeriodOrHighestSystem = models.CharField(max_length=254, blank = True)
    earliestEpochOrLowestSeries = models.CharField(max_length=254, blank = True)
    latestEpochOrHighestSeries = models.CharField(max_length=254, blank = True)
    earliestAgeOrLowestStage = models.CharField(max_length=254, blank = True)
    latestAgeOrHighestStage = models.CharField(max_length=254, blank = True)
    lowestBiostratigraphicZone = models.CharField(max_length=254, blank = True)
    highestBiostratigraphicZone = models.CharField(max_length=254, blank = True)
    lithostratigraphicTerms = models.CharField(max_length=254, blank = True)
    group = models.CharField(max_length=254, blank = True)
    formation = models.CharField(max_length=254, blank = True)
    member = models.CharField(max_length=254, blank = True)
    bed = models.CharField(max_length=254, blank = True)
    identificationID = models.CharField(max_length=254, blank = True)
    identificationQualifier = models.CharField(max_length=254, blank = True)
    typeStatus = models.CharField(max_length=254, blank = True)
    identifiedBy = models.CharField(max_length=254, blank = True)
    dateIdentified = models.CharField(max_length=254, blank = True)
    identificationReferences = models.CharField(max_length=254, blank = True)
    identificationVerificationStatus = models.CharField(max_length=254, blank = True)
    identificationRemarks = models.CharField(max_length=254, blank = True)
    taxonID = models.CharField(max_length=254, blank = True)
    scientificNameID = models.CharField(max_length=254, blank = True)
    acceptedNameUsageID = models.CharField(max_length=254, blank = True)
    parentNameUsageID = models.CharField(max_length=254, blank = True)
    originalNameUsageID = models.CharField(max_length=254, blank = True)
    nameAccordingToID = models.CharField(max_length=254, blank = True)
    namePublishedInID = models.CharField(max_length=254, blank = True)
    taxonConceptID = models.CharField(max_length=254, blank = True)
    scientificName = models.CharField(max_length=254, blank = True)
    acceptedNameUsage = models.BigIntegerField(blank = True)
    parentNameUsage = models.CharField(max_length=254, blank = True)
    originalNameUsage = models.CharField(max_length=254, blank = True)
    nameAccordingTo = models.CharField(max_length=254, blank = True)
    namePublishedIn = models.CharField(max_length=254, blank = True)
    namePublishedInYear = models.CharField(max_length=254, blank = True)
    higherClassification = models.CharField(max_length=254, blank = True)
    kingdom = models.CharField(max_length=254, blank = True)
    phylum = models.CharField(max_length=254, blank = True)
    #class = models.CharField(max_length=254, blank = True)
    order = models.CharField(max_length=254, blank = True)
    family = models.CharField(max_length=254, blank = True)
    genus = models.CharField(max_length=254, blank = True)
    subgenus = models.CharField(max_length=254, blank = True)
    specificEpithet = models.CharField(max_length=254, blank = True)
    infraspecificEpithet = models.CharField(max_length=254, blank = True)
    taxonRank = models.CharField(max_length=254, blank = True)
    verbatimTaxonRank = models.CharField(max_length=254, blank = True)
    vernacularName = models.CharField(max_length=254, blank = True)
    nomenclaturalCode = models.CharField(max_length=254, blank = True)
    taxonomicStatus = models.CharField(max_length=254, blank = True)
    nomenclaturalStatus = models.CharField(max_length=254, blank = True)
    taxonRemarks = models.CharField(max_length=254, blank = True)
    datasetKey = models.CharField(max_length=254, blank = True)
    publishingCountry = models.CharField(max_length=254, blank = True)
    lastInterpreted = models.CharField(max_length=254, blank = True)
    elevation = models.CharField(max_length=254, blank = True)
    elevationAccuracy = models.CharField(max_length=254, blank = True)
    depth = models.FloatField(blank = True)
    depthAccuracy = models.CharField(max_length=254, blank = True)
    distanceAboveSurface = models.CharField(max_length=254, blank = True)
    distanceAboveSurfaceAccuracy = models.CharField(max_length=254, blank = True)
    issue = models.CharField(max_length=254, blank = True)
    mediaType = models.CharField(max_length=254, blank = True)
    hasCoordinate = models.CharField(max_length=254, blank = True)
    hasGeospatialIssues = models.CharField(max_length=254, blank = True)
    taxonKey = models.BigIntegerField(blank = True)
    acceptedTaxonKey = models.BigIntegerField(blank = True)
    kingdomKey = models.BigIntegerField(blank = True)
    phylumKey = models.BigIntegerField(blank = True)
    classKey = models.BigIntegerField(blank = True)
    orderKey = models.BigIntegerField(blank = True)
    familyKey = models.BigIntegerField(blank = True)
    genusKey = models.BigIntegerField(blank = True)
    subgenusKey = models.CharField(max_length=254, blank = True)
    speciesKey = models.BigIntegerField(blank = True)
    species = models.CharField(max_length=254, blank = True)
    genericName = models.CharField(max_length=254, blank = True)
    acceptedScientificName = models.CharField(max_length=254, blank = True)
    verbatimScientificName = models.CharField(max_length=254, blank = True)
    typifiedName = models.CharField(max_length=254, blank = True)
    protocol = models.CharField(max_length=254, blank = True)
    lastParsed = models.CharField(max_length=254, blank = True)
    lastCrawled = models.CharField(max_length=254, blank = True)
    repatriated = models.CharField(max_length=254, blank = True)
    relativeOrganismQuantity = models.CharField(max_length=254, blank = True)

    def publish(self):
        self.published_date = timezone.now()
        self.save()

    def __str__(self):
        return self.author